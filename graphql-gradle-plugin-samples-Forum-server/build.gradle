plugins {
	id 'java'
	id 'application'
	id 'com.graphql-java-generator.graphql-gradle-plugin3'
	id 'org.springframework.boot' version "${spring3_springBootVersion}"
	id 'io.spring.dependency-management' version "${spring3_DependencyManagementPluginVersion}"
}
sourceCompatibility = '17'

repositories {
	// The plugin depends on the graphql-maven-plugin plugin logic module, which is in mavenCentral (for releases), and in mavenLocal 
	// when working on the plugin development.
	mavenLocal()		// Only if you work on the plugin development
	mavenCentral()
}

dependencies {
	// The graphql-java-client-dependencies module agregates all dependencies for the generated code
    implementation "com.graphql-java-generator:graphql-java-server-runtime:${project.version}" 

	// Then, the dependencies that are specific to this project
	implementation "org.springframework.boot:spring-boot-starter-websocket"  // Mandatory to activate the web sockets (mandatory for subscription)
	implementation "org.springframework.boot:spring-boot-starter-data-jpa"
	implementation "org.springframework.boot:spring-boot-starter-oauth2-resource-server"
	
	runtimeOnly "com.h2database:h2"

	// Dependencies for tests
	testImplementation "org.springframework.boot:spring-boot-starter-test" 
}

// The line below adds the generated sources as a java source folder, in the IDE
sourceSets.main.java.srcDirs += '/build/generated/sources/graphqlGradlePlugin'
sourceSets.main.resources.srcDirs += '/build/generated/resources/graphqlGradlePlugin'

// Let's configure the GraphQL Gradle Plugin
// (the plugin will automatically add it as a dependency to compileJava and processResources) 
generateServerCodeConf {
	generateDataLoaderForLists = true
	generateJPAAnnotation = true
	javaTypeForIDType = "java.lang.Long"
	packageName = "org.forum.server.graphql"
	scanBasePackages = "org.forum.server.jpa , org.forum.server.specific_code, org.forum.server.oauth2"
	schemaPersonalizationFile = "src/main/graphql/forum_personalization.json"
	useJakartaEE9 = true
	customScalars = [ [
			graphQLTypeName: "Date",
			javaType: "java.util.Date",
			graphQLScalarTypeStaticField: "com.graphql_java_generator.customscalars.GraphQLScalarTypeDate.Date"
	] ]
}

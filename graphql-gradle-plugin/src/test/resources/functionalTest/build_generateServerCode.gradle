plugins {
	id 'java'
	id 'com.graphql-java-generator.graphql-gradle-plugin'
	id 'org.springframework.boot' version "${springBootVersion}"
	id 'io.spring.dependency-management' version "${springDependencyManagementPluginVersion}"
}

repositories {
	// The plugin depends on the graphql-maven-plugin plugin logic module, which is in mavenCentral (for releases), and in mavenLocal 
	// when working on the plugin development.
	mavenCentral()
	mavenLocal()		// Only if you work on the plugin development
}

dependencies {
	// The graphql-java-client-dependencies module agregates all dependencies for the generated code
    implementation "com.graphql-java-generator:graphql-java-server-runtime:${project.version}" 

	// Then, the dependencies that are specific to this project
	implementation "org.springframework.boot:spring-boot-starter-websocket"  // Mandatory to activate the web sockets (mandatory for subscription)
	implementation "org.springframework.boot:spring-boot-starter-security"
	implementation "org.springframework.boot:spring-boot-starter-oauth2-resource-server"

    // This project uses some custom scalars from the graphql-java-extended-scalars module
    implementation "com.graphql-java:graphql-java-extended-scalars:${graphqlJavaExtendedScalarsVersion}"
	
    implementation "com.github.dozermapper:dozer-core:${dozerVersion}"
}

generateServerCode {
	packaging = 'war'
}

tasks.register('generateServerCodeRegister', com.graphql_java_generator.gradleplugin.GenerateServerCodeTask) {
	targetResourceFolder = '/build/generated-resources/generateServerCodeRegister'
	targetSourceFolder = '/build/generated-sources/generateServerCodeRegister'
	packaging = 'war'
}


buildscript {
    repositories {
        mavenCentral()
		// The plugin depends on the graphql-maven-plugin, whose snapshot versions are on the local maven repository.
		// So, for development reason, we need to access to the local maven repository. It's useless for standard use of the plugin
        mavenLocal()
    }
    
    dependencies {
    	// The version number is not used in this multi-module project: the included build of graphql-gradle-plugin
    	// will replace this declaration. But this dummy declaration is needed!
    	//
    	// Of course, for a real use of the plugin in your project, you'll have to replace by the last plugin's version
        classpath 'com.graphql-java-generator:graphql-gradle-plugin:dummy'
        
        classpath 'org.springframework.boot:spring-boot-gradle-plugin:2.4.0'
    }
    
}

plugins {
	id 'java-library'
	id 'application'
	id 'com.graphql-java-generator.graphql-gradle-plugin'
	id 'org.springframework.boot' version "${springBootVersion}"
	id 'io.spring.dependency-management' version "${springDependencyManagementPluginVersion}"
}

repositories {
	// The plugin depends on the graphql-maven-plugin plugin logic module, which is in mavenCentral (for releases), and in mavenLocal 
	// when working on the plugin development.
	mavenCentral()
	mavenLocal()		// Only if you work on the plugin development
}

dependencies {
    implementation "org.springframework.boot:spring-boot-starter-web"
    implementation "org.springframework.boot:spring-boot-starter-security"
    implementation "org.springframework.security:spring-security-oauth2-authorization-server:${oauth2AuthorizationServerVersion}"
    
    // Dependencies mandatory to build with java 17
    implementation "com.sun.xml.bind:jaxb-impl:${jaxbImplVersion}"
    implementation "com.sun.xml.messaging.saaj:saaj-impl:${saajImplVersion}"
    
	// Dependencies for tests
	testImplementation "org.springframework.boot:spring-boot-starter-test"
	testImplementation "org.springframework.security:spring-security-test" 
}

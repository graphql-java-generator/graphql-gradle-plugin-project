

plugins {
	// Let's set the asciidoctor version for the docs module
	id 'org.asciidoctor.convert' version '1.5.6' apply false
}

// Let's get the group and version for this project
apply from: 'graphql-gradle-plugin/common_conf.gradle'

subprojects {

	// The '-parameters' compiler parameter allows to keep the parameter names in the generated code. It's useful for some tests.
	// It has no impact on the plugin, as it is in a separate build.
    tasks.withType(JavaCompile) {
        options.compilerArgs << '-parameters'
    }	

	/**
	 * For samples project, we add the copySamplesFromMavenPlugin task.
	 *
	 * This tasks allows to copy the code (main and test, java and resources) from the maven module of the same name into the gradle one.
	 * This allow to test the gradle plugin in the same way, as the maven plugin is.
	 */
	if (project.name.contains('samples') && System.properties['graphqlGradlePlugin.graphqlMavenPluginProject.path'] != null) {
	
		task cleanSamplesCode() {
			group = "Preparation"
			description = "Delete the src folder (to allow fresh copy of the sources from the GraphQL maven sample code)"

			// The action for this task is to delete the src folder
			doLast {
				delete 'src'
			}
		}

		task copySamplesFromMavenPlugin(type: Copy) {
			group = "Preparation"
			description = "Copy the sources from the GraphQL maven plugin to the Gradle plugin"

			doLast {
				println "copy from: " + System.properties['graphqlGradlePlugin.graphqlMavenPluginProject.path'] +'/graphql-maven-plugin-samples/' + project.name.replace('gradle', 'maven')
				println "copy into: ${project.projectDir}"
			}
							
			// Please set the systemProp.graphqlGradlePlugin.graphqlMavenPluginProject.path in the gradle.properties to the
			// full path for the graphql-maven-plugin-project folder
			// OR IGNORE IF YOU JUST BUILD THE GRADLE PLUGIN as a standalone
			// 
			// Let's the source files from the graphql-maven-plugin-samples-XXX folder into the current project
		    from(System.properties['graphqlGradlePlugin.graphqlMavenPluginProject.path'] +'/graphql-maven-plugin-samples/' + project.name.replace('gradle', 'maven')) {
		    	include "/src/graphqls/**"
		    	include "/src/main/**"
		    	include "/src/test/**"
		    }
		    into "${project.projectDir}"
		    
		    dependsOn cleanSamplesCode
		    mustRunAfter cleanSamplesCode
		}
	}
}



/*
//Let's include the documentation in the distribution archive
distZip {
    from project(':graphql-gradle-plugin-docs').asciidoctor, { 
        into "${project.name}-${version}"
    }
}
distTar {
    from project(':graphql-gradle-plugin-docs').asciidoctor, {
        into "${project.name}-${version}"
    }
}
*/
